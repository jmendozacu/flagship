<?php

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @copyright  Copyright (c) 2009 Maison du Logiciel (http://www.maisondulogiciel.com)
 * @author : Olivier ZIMMERMANN
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
class MDN_Scanner_OrderPreparationController extends Mage_Adminhtml_Controller_Action {

	/**
	 * Picking
	 *
	 */
	protected $_location = 'DOCK';

	public function indexAction() {
		$this->loadLayout();
		$this->renderLayout();
	}

	public function setPickingList($product_ids = array()) {
		if (empty($product_ids)) {
			return;
		}
		echo "array keys product ids:<pre>".print_r(array_keys($product_ids), true)."</pre>\n";
		// select products in picking list
		$warehouseId = mage::helper('Orderpreparation')->getPreparationWarehouse();
		$ordertoprepareitemColl = Mage::getModel('Orderpreparation/ordertoprepareitem')
				->getCollection()
				->addFieldToFilter('display_in_picking_list', 1)
				->addFieldToFilter('preparation_warehouse', $warehouseId)
				->addFieldToFilter('product_id', array_keys($product_ids))
				// TODO: need to sort by product_id ascending
		;
		echo "ordertoprepareitemColl data:<pre>".print_r($ordertoprepareitemColl->getData(), true)."</pre>\n";
		/* FIX: this needs to set display_in_picking_list = 0 only for each submitted serial for product
		 * Example: [serials_493] => FS20140127-0094 (where 493 is product id)
			FS20140127-0095
			FS20140127-0096
		 */
		$setSerials = array();
		foreach ($ordertoprepareitemColl as $item) {
			$product_id = $item->getProductId();
			echo "item product id = $product_id<br>\n";
			if(array_key_exists($product_id, $product_ids)) {
				echo "array key $product_id exists in product ids array<br>\n";
				foreach($product_ids[$product_id] as $index => $serial) {
					echo "product ids $product_id index $index serial = $serial<br>\n";
					if(!empty($serial)) {
						echo "serial is not empty<br>\n";
						$item->setDisplayInPickingList(0); // this is not setting display_in_picking_list = 0 in the item array?!
						echo "set item id {$item->getId()} display_in_picking_list = 0<br>\n";
						$setSerials[] = $serial;
						// TODO: SECONDARY: append $serial to same place Magento admin > ERP > Order Preparation > Prepare Orders > 
						// any order > Preparation tab > Serials text box saves to (in proper format)
						$product_ids[$product_id][$index] = '';
						echo "set product ids $product_id index $index to blank<br>\n";
					}
				}
			}
		}
		// DO NOT SAVE UNLESS display_in_picking_list = 0 IS SET FOR SUBMITTED SERIALS!!!
		die("ordertoprepareitemColl save data:<pre>".print_r($ordertoprepareitemColl->getData(), true));
		//$ordertoprepareitemColl->save();
		return $setSerials;
	}

	/**
	 * This function should take the product id's/serials submitted,
	 * mark the submitted serials' products as "picked" (display_in_picking_list = 0),
	 * then mark the serial location as "DOCK" in Rvtech Serials.
	 * SECONDARY: save serial to item on order for product:
	 * see MDN/OrderPreparation/controllers/OrderPreparationController->SaveOrderAction $preparationData section.
	 */
	public function savePickingAction() {
		$postData = $this->getRequest()->getParams();
		$postData = array( // test
			'product_493' => 3, 
			'serials_493' => array(
				'FS20140127-0091', 
				'FS20140127-0094', 
				'FS20140127-0092'
			),
			'product_276' => 1, 
			'serials_276' => array('FS20140127-0115'),
			'product_479' => 0,
			'serials_479' => array(),
			'product_450' => 1,
			'serials_450' => array('FS20140127-0085'),
			'product_478' => 0,
			'serials_478' => array(), 
			'product_477' => 0,
			'serials_477' => array(),
			'product_481' => 0,
			'serials_481' => array()
		);
		echo "post:<pre>" . print_r($postData, true)."</pre>\n";
		$product_ids = array();
		foreach ($postData as $key => $value) {
			if (strpos($key, 'serials') !== false) {
				$id = explode('serials_', $key);
				if(!empty($value)) {
					$serials = explode("\n", $value);
					foreach($serials as $serial) {
						if(!empty($serial)) {
							$product_ids[$id[1]][] = $serial;
						}
					}
				}
			}
		}
		echo "product ids:<pre>".print_r($product_ids, true)."</pre>\n";
		if (!empty($product_ids)) {
			$setSerials = $this->setPickingList($product_ids);
			
			foreach($setSerials as $serial) {
				$rvProducts = Mage::getSingleton('barcodes/barcodes')->getCollection()
						//->addFieldToFilter('product_id', array('in' => $product_ids));
						// select by $serial
				;

				foreach ($rvProducts as $row) {
					$row->setLocation($this->_location);
				}

				try {
					$rvProducts->save();
				} catch (Exception $e) {
					$errors[] = $e->getMessage();;
				}
			}
		}
		// TODO: need to send errors to redirected scanner page if possible
		if($errors) {
			die(implode("\n", $errors));
		} else {
			$this->_redirect('Scanner/OrderPreparation/index');
		}
	}

}