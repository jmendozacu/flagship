<?php

/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * @copyright  Copyright (c) 2009 Maison du Logiciel (http://www.maisondulogiciel.com)
 * @author : Olivier ZIMMERMANN
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
class MDN_Scanner_OrderPreparationController extends Mage_Adminhtml_Controller_Action {

	/**
	 * Picking
	 *
	 */
	protected $_location = 'DOCK';

	public function indexAction() {
		$this->loadLayout();
		$this->renderLayout();
	}

	/**
	 * This function should take the product id's/serials submitted,
	 * mark the submitted serials' products as "picked" (display_in_picking_list = 0),
	 * then mark the serial location as "DOCK" in Rvtech Serials.
	 * SECONDARY: save serial to item on order for product:
	 * see MDN/OrderPreparation/controllers/OrderPreparationController->SaveOrderAction $preparationData section.
	 */
	public function savePickingAction() {
		//echo "running MDN_Scanner_OrderPreparationController->savePickingAction()...<br>\n";
		$postData = $this->getRequest()->getParams();
		//echo "postData:<pre>" . print_r($postData, true)."</pre>\n";
		$productSerials = array();
		foreach ($postData as $key => $value) {
			if (strpos($key, 'serials') !== false) {
				$arr = explode('_', $key);
				if (!empty($arr[1]) && !empty($value)) {
					$id = $arr[1];
					//echo "found serials product id $id<br>\n";
					$serials = explode("\n", $value);
					//echo "serials:<pre>".print_r($serials, true)."</pre>\n";
					foreach ($serials as $serial) {
						$serial = str_replace("\r", '', $serial);
						$serial = str_replace("\n", '', $serial);
						if (!empty($serial)) {
							$productSerials[$id][] = $serial;
						}
					}
				}
			}
		}
		//echo "product serials:<pre>".print_r($productSerials, true)."</pre>\n";
		if (!empty($productSerials)) {
			//echo "array keys product ids:<pre>".print_r(array_keys($productSerials), true)."</pre>\n";
			// select products in picking list
			$warehouseId = mage::helper('Orderpreparation')->getPreparationWarehouse();
			//echo "warehouse id: $warehouseId<br>\n";
			$ordertoprepareitemColl = Mage::getModel('Orderpreparation/ordertoprepareitem')
					->getCollection()
					->addFieldToFilter('display_in_picking_list', 1)
					->addFieldToFilter('preparation_warehouse', $warehouseId)
					->addFieldToFilter('product_id', array_keys($productSerials))
					//->setOrder('product_id', 'ASC')
			;
			//echo "Orderpreparation/ordertoprepareitem->getSelect: ".$ordertoprepareitemColl->getSelect()."<br>\n";
			//echo "ordertoprepareitemColl data:<pre>".print_r($ordertoprepareitemColl->getData(), true)."</pre>\n";
			//exit;
			/* FIX: this needs to set display_in_picking_list = 0 only for each submitted serial for product
			 * Example: [serials_493] => FS20140127-0094 (where 493 is product id)
			  FS20140127-0095
			  FS20140127-0096
			 */
			$setSerials = array();
			foreach ($ordertoprepareitemColl as $item) {
				//echo "item:<pre>".print_r($item->getData(), true)."</pre>\n";
				if($item->getQtyPicked() >= $item->qty) {
					$item->setQtyPicked($item->qty);
					//echo "item quantity picked = quantity; setting display_in_picking_list = 1<br>\n";
					$item->setData('display_in_picking_list', 1);
					die("item display_in_picking_list = ".$item->getData('display_in_picking_list'));
					continue;
				}
				$product_id = $item->getProductId();
				//echo "item product id = $product_id<br>\n";
				if (array_key_exists($product_id, $productSerials)) {
					//echo "array key $product_id exists in product ids array<br>\n";
					foreach ($productSerials[$product_id] as $index => $serial) {
						//echo "product ids $product_id index $index serial = $serial<br>\n";
						if (!empty($serial)) {
							if(!is_numeric($item->getQtyPicked()) || $item->getQtyPicked < 0) {
								//echo "quantity picked is not numeric or less than 0; setting to 0<br>\n";
								$item->setQtyPicked(0);
								//echo "item->getQtyPicked = ".$item->getQtyPicked()."<br>\n";
							}
							$item->setQtyPicked(min($item->getQty(), $item->getQtyPicked() + 1));
							//echo "incremented quantity picked to {$item->getQtyPicked()}<br>\n";
							$setSerials[] = $serial;
							// TODO: SECONDARY: append $serial to same place Magento admin > ERP > Order Preparation > Prepare Orders > 
							// any order > Preparation tab > Serials text box saves to (in proper format)
							$productSerials[$product_id][$index] = '';
							//echo "set product ids $product_id index $index to blank<br>\n";
							if($item->getQtyPicked() == $item->getQty()) {
								//echo "item qty_picked = item qty<br>\n";
								$item->setData('display_in_picking_list', 0);
								//echo "item display_in_picking_list = ".$item->getData('display_in_picking_list')."<br>\n";
								//echo "item->setData('display_in_picking_list', 0)<br>\n";
								//echo "item->getDisplayInPickingList() = ".$item->getDisplayInPickingList()."<br>\n";
								//echo "item:<pre>".print_r($item->getData(), true)."</pre>\n";
								continue 2;
							}
							//echo "item:<pre>".print_r($item->getData(), true)."</pre>\n";
						}
					}
				}
			}
			//echo "setSerials:<pre>".print_r($setSerials, true)."</pre>\n";
			// DO NOT SAVE UNLESS display_in_picking_list = 0 IS SET FOR SUBMITTED SERIALS!!!
			die("ordertoprepareitemColl save data:<pre>".print_r($ordertoprepareitemColl->getData(), true));
			//exit;
			$ordertoprepareitemColl->save();
			
			//echo "setSerials:<pre>".print_r($setSerials, true)."<br>\n";
			$rvSerials = Mage::getModel('barcodes/barcodes')->getCollection()
					->addFieldToFilter('dzv_serial', array('in' => $setSerials))
					//->getSelect()
			;
			//die("rvSerials select: $rvSerials");
			//echo "location = {$this->_location}<br>\n";
			//die("rvSerials:<pre>".print_r($rvSerials->getData(), true)."</pre>\n");
			foreach ($rvSerials as $row) {
				$row->setLocation($this->_location);
				try {
					// Save it row by row :)
					$row->save();
				} catch (Exception $e) {
					$errors[] = $e->getMessage();
				}
			}
		}
		
		// TODO: need to send errors to redirected scanner page if possible
		if ($errors) {
			die(implode("\n", $errors));
		} else {
			$this->_redirect('Scanner/OrderPreparation/index');
		}
	}

}